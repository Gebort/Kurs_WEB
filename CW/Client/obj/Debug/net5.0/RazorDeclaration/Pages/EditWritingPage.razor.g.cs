// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace CW.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using CW.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using CW.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Projects\VisualStudio\Ficbook\CW\Client\_Imports.razor"
using TabBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projects\VisualStudio\Ficbook\CW\Client\Pages\EditWritingPage.razor"
using CW.Shared.Model;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/edit/{writingid}")]
    public partial class EditWritingPage : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 40 "D:\Projects\VisualStudio\Ficbook\CW\Client\Pages\EditWritingPage.razor"
       
    private bool isNew;
    private bool notFound;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private async Task OnWritingPublishAsync() {
        var authState = await authenticationStateTask;
        var user = authState.User;
        writing.PublishDate = DateTime.Now;
        writing.Author = user.Identity.Name;
        if (isNew) {
            using (var response = await Http.PostAsJsonAsync<Writing>("user/addwriting", writing)) {
                if (response.IsSuccessStatusCode) {
                    var wrId = (await response.Content.ReadFromJsonAsync<Writing>()).Id;
                    NavManager.NavigateTo("/writing?id=" + wrId.ToString());
                }
            }
        } else {
            using (var response = await Http.PatchAsync("user/editwriting", JsonContent.Create(writing))) {
                if (response.IsSuccessStatusCode) {
                    var wrId = (await response.Content.ReadFromJsonAsync<Writing>()).Id;
                    NavManager.NavigateTo("/writing?id=" + wrId.ToString());
                }
            }
        }
    }

    protected override async Task OnInitializedAsync() {
        isNew = WritingId == "new";
        if (!isNew) {
            writing = (await Http.GetFromJsonAsync<Writing[]>("user/writing?id=" + WritingId))[0];
            notFound = writing == null;
        } else {
            writing = new Writing();
        }
    }

    [Parameter]
    public string WritingId { get; set; }

    private Writing writing;


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
